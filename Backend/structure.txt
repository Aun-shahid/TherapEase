THERAPEASE BACKEND PROJECT STRUCTURE
=====================================

Project: Therapease Backend
Framework: Django
Python Version: 3.11
Date: July 9, 2025

DIRECTORY STRUCTURE
===================

Backend/
├── .env                                    # Environment configuration file
├── requirements.txt                        # Python dependencies
├── venv/                                  # Python virtual environment (excluded from detailed mapping)
├── src_old/                               # Legacy code (excluded from current structure)
└── app/                                   # Main Django application directory
    ├── .env                               # Application-specific environment variables
    ├── db.sqlite3                         # SQLite database file
    ├── manage.py                          # Django management script
    ├── Structure                          # Structure documentation (legacy)
    ├── logs/                              # Application log files
    │   ├── audit.log                      # Audit trail logs
    │   ├── django.log                     # Django application logs
    │   └── security.log                   # Security-related logs
    ├── app/                               # Core Django project configuration
    │   ├── __init__.py                    # Python package marker
    │   ├── asgi.py                        # ASGI configuration for async support
    │   ├── settings.py                    # Django settings configuration
    │   ├── urls.py                        # Main URL routing configuration
    │   ├── wsgi.py                        # WSGI configuration for deployment
    │   └── __pycache__/                   # Python bytecode cache
    │       ├── __init__.cpython-311.pyc
    │       ├── settings.cpython-311.pyc
    │       ├── urls.cpython-311.pyc
    │       └── wsgi.cpython-311.pyc
    ├── authenticator/                     # Authentication and authorization module
    │   ├── __init__.py                    # Python package marker
    │   ├── admin.py                       # Django admin interface configuration
    │   ├── apps.py                        # Django app configuration
    │   ├── email.py                       # Email handling for authentication
    │   ├── models.py                      # Database models for authentication
    │   ├── serializers.py                 # API serializers for authentication
    │   ├── tests.py                       # Unit tests for authentication
    │   ├── token_manager.py               # JWT token management utilities
    │   ├── urls.py                        # URL routing for authentication endpoints
    │   ├── views.py                       # View functions/classes for authentication
    │   ├── management/                    # Django management commands
    │   │   └── commands/                  # Custom management commands directory
    │   │       └── (empty)                # No custom commands currently
    │   ├── migrations/                    # Database migration files
    │   │   ├── __init__.py                # Python package marker
    │   │   ├── 0001_initial.py            # Initial migration
    │   │   ├── 0002_alter_emailverificationtoken_expires_at_refreshtoken.py
    │   │   ├── 0003_alter_emailverificationtoken_expires_at.py
    │   │   ├── 0004_alter_emailverificationtoken_expires_at_and_more.py
    │   │   └── __pycache__/               # Migration bytecode cache
    │   │       ├── __init__.cpython-311.pyc
    │   │       ├── 0001_initial.cpython-311.pyc
    │   │       ├── 0002_alter_emailverificationtoken_expires_at_refreshtoken.cpython-311.pyc
    │   │       ├── 0003_alter_emailverificationtoken_expires_at.cpython-311.pyc
    │   │       └── 0004_alter_emailverificationtoken_expires_at_and_more.cpython-311.pyc
    │   ├── tests/                         # Test directory
    │   │   └── (empty)                    # No specific test files yet
    │   └── __pycache__/                   # Python bytecode cache
    │       ├── __init__.cpython-311.pyc
    │       ├── admin.cpython-311.pyc
    │       ├── apps.cpython-311.pyc
    │       ├── middleware.cpython-311.pyc
    │       ├── models.cpython-311.pyc
    │       ├── serializers.cpython-311.pyc
    │       ├── token_manager.cpython-311.pyc
    │       ├── urls.cpython-311.pyc
    │       ├── utils.cpython-311.pyc
    │       └── views.cpython-311.pyc
    ├── core/                              # Core application functionality
    │   ├── __init__.py                    # Python package marker
    │   ├── admin.py                       # Django admin interface configuration
    │   ├── apps.py                        # Django app configuration
    │   ├── models.py                      # Core database models
    │   ├── tests.py                       # Unit tests for core functionality
    │   ├── views.py                       # Core view functions/classes
    │   └── __pycache__/                   # Python bytecode cache
    │       ├── __init__.cpython-311.pyc
    │       ├── admin.cpython-311.pyc
    │       ├── apps.cpython-311.pyc
    │       └── models.cpython-311.pyc
    ├── history/                           # Session history management
    │   ├── __init__.py                    # Python package marker
    │   ├── admin.py                       # Django admin interface configuration
    │   ├── apps.py                        # Django app configuration
    │   ├── models.py                      # History-related database models
    │   ├── tests.py                       # Unit tests for history functionality
    │   ├── views.py                       # History view functions/classes
    │   └── __pycache__/                   # Python bytecode cache
    │       ├── __init__.cpython-311.pyc
    │       ├── admin.cpython-311.pyc
    │       ├── apps.cpython-311.pyc
    │       └── models.cpython-311.pyc
    ├── soap/                              # SOAP notes generation module
    │   ├── __init__.py                    # Python package marker
    │   ├── admin.py                       # Django admin interface configuration
    │   ├── apps.py                        # Django app configuration
    │   ├── models.py                      # SOAP-related database models
    │   ├── tests.py                       # Unit tests for SOAP functionality
    │   ├── views.py                       # SOAP view functions/classes
    │   └── __pycache__/                   # Python bytecode cache
    │       ├── __init__.cpython-311.pyc
    │       ├── admin.cpython-311.pyc
    │       ├── apps.cpython-311.pyc
    │       └── models.cpython-311.pyc
    ├── therapy_sessions/                  # Therapy session management
    │   ├── __init__.py                    # Python package marker
    │   ├── admin.py                       # Django admin interface configuration
    │   ├── apps.py                        # Django app configuration
    │   ├── models.py                      # Session-related database models
    │   ├── tests.py                       # Unit tests for session functionality
    │   ├── urls.py                        # URL routing for session endpoints
    │   ├── views.py                       # Session view functions/classes
    │   └── __pycache__/                   # Python bytecode cache
    │       ├── __init__.cpython-311.pyc
    │       ├── admin.cpython-311.pyc
    │       ├── apps.cpython-311.pyc
    │       └── models.cpython-311.pyc
    ├── transcription/                     # Audio transcription module
    │   ├── __init__.py                    # Python package marker
    │   ├── admin.py                       # Django admin interface configuration
    │   ├── apps.py                        # Django app configuration
    │   ├── models.py                      # Transcription-related database models
    │   ├── tests.py                       # Unit tests for transcription functionality
    │   ├── views.py                       # Transcription view functions/classes
    │   └── __pycache__/                   # Python bytecode cache
    │       ├── __init__.cpython-311.pyc
    │       ├── admin.cpython-311.pyc
    │       ├── apps.cpython-311.pyc
    │       └── models.cpython-311.pyc
    └── users/                             # User management module
        ├── __init__.py                    # Python package marker
        ├── admin.py                       # Django admin interface configuration
        ├── apps.py                        # Django app configuration
        ├── forms.py                       # Django forms for user management
        ├── models.py                      # User-related database models
        ├── tests.py                       # Unit tests for user functionality
        ├── urls.py                        # URL routing for user endpoints
        ├── views.py                       # User view functions/classes
        ├── migrations/                    # Database migration files
        │   ├── __init__.py                # Python package marker
        │   ├── 0001_initial.py            # Initial migration
        │   └── __pycache__/               # Migration bytecode cache
        │       ├── __init__.cpython-311.pyc
        │       └── 0001_initial.cpython-311.pyc
        └── __pycache__/                   # Python bytecode cache
            ├── __init__.cpython-311.pyc
            ├── admin.cpython-311.pyc
            ├── apps.cpython-311.pyc
            ├── models.cpython-311.pyc
            ├── urls.cpython-311.pyc
            └── views.cpython-311.pyc

APPLICATION MODULES OVERVIEW
============================

1. authenticator/
   - Handles user authentication and authorization
   - Manages JWT tokens and email verification
   - Includes rate limiting and security features
   - Contains 4 database migrations

2. core/
   - Contains core application functionality
   - Base models and utilities
   - Common functionality shared across modules

3. history/
   - Manages session history and records
   - Tracks user interactions and session data
   - Provides historical data access

4. soap/
   - Generates SOAP (Subjective, Objective, Assessment, Plan) notes
   - Processes therapy session data into structured notes
   - Integrates with AI for automated note generation

5. therapy_sessions/
   - Manages therapy session lifecycle
   - Handles session scheduling and management
   - Tracks session metadata and relationships

6. transcription/
   - Handles audio-to-text transcription
   - Integrates with transcription services
   - Manages transcription data and processing

7. users/
   - User profile management
   - User-specific settings and preferences
   - User relationship management
   - Contains 1 database migration

CONFIGURATION FILES
===================

- .env (Root): Main environment configuration
- .env (App): Application-specific environment variables
- requirements.txt: Python package dependencies
- manage.py: Django management script
- settings.py: Django configuration settings
- urls.py: Main URL routing configuration

DATABASE
========

- db.sqlite3: SQLite database file (development)
- PostgreSQL configured in environment (production)
- Migration files track database schema changes

LOGGING
=======

- audit.log: User actions and system events
- django.log: Django application logs
- security.log: Security-related events and warnings

EXCLUDED FROM STRUCTURE
=======================

- venv/: Virtual environment (contains Python packages)
- src_old/: Legacy code directory
- __pycache__/: Python bytecode cache files (detailed above)
I have made some changes - Mavia
NOTES
=====

- Project uses Django REST Framework for API development
- Authentication system uses JWT tokens
- Database migrations are tracked for schema versioning
- Logging is configured for audit, security, and general application events
- Environment variables are used for configuration management
- Project follows Django best practices for app organization

Last Updated: July 9, 2025
